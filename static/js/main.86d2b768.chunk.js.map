{"version":3,"sources":["components/main-logo.png","components/flight-list-segment.js","components/flight-list.js","components/price-filter.js","components/transfer-filter.js","components/app.js","serviceWorker.js","index.js"],"names":["module","exports","InfoWrap","styled","div","Placeholder","p","DurationInfo","SegmentInfo","props","segments","map","info","date","destination","duration","origin","stops","fromTo","originDate","Date","formatOriginDate","format","destinationDate","addMinutes","formatDestinationDate","timeInfo","hours","Math","floor","minutes","durationInfo","key","uniqueId","className","length","join","FlightListWrapper","ListItem","Price","AeroLogoWrap","FlightList","tickets","ticket","index","price","carrier","aeroLogoUrl","src","alt","defaultProps","PriceFilterWrap","defaultFilterStyles","isActiveFilterStyles","PriceFilter","priceFilter","changePriceFilter","sortByDuration","sortByPrice","FilterOption1","FilterOption2","handleOnChangeFilter","event","target","getAttribute","name","onClick","TransferFilterWrap","Title","span","checkboxActiveStyle","style","background","checkboxNonActiveStyle","TransferFilter","changeCheckboxes","checkboxes","handleOnChangeCheckboxes","checked","transferType","currentCheckboxes","isChecked","current","all","noTransfer","oneTransfer","twoTransfer","threeTransfer","Object","values","checkbox","onMouseEnter","onMouseLeave","type","id","checkboxType","onChange","htmlFor","title","ContentWrapper","Content","MainLogoWrapper","LoaderWrapper","defaultFilterCheckboxes","defaultTicketsList","show","fetchServerData","url","a","maxRequestsNumber","searchIdRequest","axios","get","Error","App","useState","setTickets","dataLoader","setDataLoader","setVisibleTickets","visibleTickets","currentTickets","entries","forEach","el","sortedFunc","arr","sortBy","getTickets","fetchSearchId","searchId","data","fetchData","response","newTickets","filter","stop","useEffect","mainLogoSrc","color","height","width","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.86d2b768.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/main-logo.d2a4807b.png\";","import React from 'react';\nimport { addMinutes, format } from 'date-fns';\nimport styled from 'styled-components';\nimport { uniqueId } from 'lodash';\n\nconst InfoWrap = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  align-content: space-between;\n  margin: 10px 0px 0px 0px;\n`;\n\nconst Placeholder = styled.p`\n  color: #A0B0B9;\n  font-size: 12px;\n  margin: 0;\n  text-transform: uppercase;\n`;\n\nconst DurationInfo = styled.p`\n  color: #4A4A4A;\n  font-size: 14px;\n  margin: 0;\n  text-transform: uppercase;\n`;\n\nconst SegmentInfo = (props) => {\n  const { segments } = props;\n\n  return segments.map((info) => {\n    const {\n      date, destination, duration, origin, stops,\n    } = info;\n    const fromTo = `${origin} - ${destination}`;\n\n    const originDate = new Date(date);\n    const formatOriginDate = format(originDate, 'HH:mm');\n    const destinationDate = addMinutes(originDate, duration);\n    const formatDestinationDate = format(destinationDate, 'HH:mm');\n    const timeInfo = `${formatOriginDate} - ${formatDestinationDate}`;\n\n    const hours = Math.floor(duration / 60);\n    const minutes = duration % 60;\n\n    const durationInfo = `${hours}ч ${minutes}м`;\n    const transferLength = () => {\n      if (stops.length === 0) return 'Без пересадок';\n      if (stops.length === 1) return '1 пересадка';\n      return `${stops.length} пересадки`;\n    };\n\n    return (\n      <InfoWrap key={uniqueId()}>\n        <div className=\"info-element\">\n          <Placeholder>{fromTo}</Placeholder>\n          <DurationInfo>{timeInfo}</DurationInfo>\n        </div>\n        <div className=\"info-element\">\n          <Placeholder>в пути</Placeholder>\n          <DurationInfo>{durationInfo}</DurationInfo>\n        </div>\n        <div className=\"info-element\">\n          <Placeholder>{transferLength()}</Placeholder>\n          <DurationInfo>{stops.join(', ')}</DurationInfo>\n        </div>\n      </InfoWrap>\n    );\n  });\n};\n\nexport default SegmentInfo;\n","import React from 'react';\nimport styled from 'styled-components';\nimport propTypes from 'prop-types';\nimport { uniqueId } from 'lodash';\nimport SegmentInfo from './flight-list-segment';\n\n\nconst FlightListWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-basis: 100%;\n`;\n\nconst ListItem = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-basis: 142px;\n  background-color: white;\n  margin: 20px 0px 0px 0px;\n  padding: 20px 20px 20px 20px;\n  box-shadow: 0px 2px 8px rgba(0, 0, 0, 0.1);\n  border-radius: 5px;\n  align-content: space-between;\n`;\n\nconst Price = styled.div`\n  color: #2196F3;\n  font-size: 24px;\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  grid-template-rows: 1fr;\n  margin-bottom: 10px;\n`;\n\nconst AeroLogoWrap = styled.div`\n  display: grid;\n  grid-column: -1 / -2;\n`;\n\nconst FlightList = (props) => {\n  const { tickets } = props;\n  const renderTickets = () => {\n    if (tickets.length === 0) return null;\n    return tickets.map((ticket, index) => {\n      if (index >= 5) return false;\n      const { price, carrier, segments } = ticket;\n      const aeroLogoUrl = `https://pics.avs.io/99/36/${carrier}.png`;\n\n      return (\n        <ListItem key={uniqueId()}>\n          <Price>\n            <span>{price}</span>\n            <AeroLogoWrap>\n              <img src={aeroLogoUrl} alt=\"aero-brand\" />\n            </AeroLogoWrap>\n          </Price>\n\n\n          <SegmentInfo segments={segments} />\n        </ListItem>\n      );\n    });\n  };\n  return (\n    <FlightListWrapper>\n      {renderTickets()}\n    </FlightListWrapper>\n  );\n};\n\nFlightList.propTypes = {\n  tickets: propTypes.arrayOf(propTypes.object),\n};\n\nFlightList.defaultProps = {\n  tickets: [],\n};\n\nexport default FlightList;\n","import React from 'react';\nimport styled from 'styled-components';\nimport propTypes from 'prop-types';\n\nconst PriceFilterWrap = styled.div`\n  display: flex;\n  flex-direction: row;\n  text-align: center;\n  line-height: 50px;\n  flex-basis: 50px;\n  text-transform: uppercase;\n  font-size: 12px;\n  box-shadow: 0px 2px 8px rgba(0, 0, 0, 0.1);\n  border-radius: 5px;\n`;\nconst defaultFilterStyles = `\n    color: #4A4A4A;\n    background-color: #FFFFFF;\n    height: inherit;\n    flex-grow: 1;\n  `;\nconst isActiveFilterStyles = `\n    color: #FFFFFF;\n    background-color: #2196F3;\n    height: inherit;\n    flex-grow: 1;\n  `;\n\nconst PriceFilter = (props) => {\n  const {\n    priceFilter, changePriceFilter, sortByDuration, sortByPrice,\n  } = props;\n  const FilterOption1 = styled.div`\n    ${(priceFilter === 'cheapest') ? isActiveFilterStyles : defaultFilterStyles}\n    border-radius: 5px 0px 0px 5px;\n  `;\n  const FilterOption2 = styled.div`\n    ${(priceFilter === 'fastest') ? isActiveFilterStyles : defaultFilterStyles}\n    border-radius: 0px 5px 5px 0px;\n  `;\n\n  const handleOnChangeFilter = (event) => {\n    switch (event.target.getAttribute('name')) {\n      case 'cheapest': {\n        changePriceFilter('cheapest');\n        sortByPrice();\n        break;\n      }\n      case 'fastest': {\n        changePriceFilter('fastest');\n        sortByDuration();\n        break;\n      }\n      default: {\n        changePriceFilter('cheapest');\n      }\n    }\n  };\n\n\n  return (\n    <PriceFilterWrap>\n      <FilterOption1 name=\"cheapest\" onClick={handleOnChangeFilter}>Самый дешевый</FilterOption1>\n      <FilterOption2 name=\"fastest\" onClick={handleOnChangeFilter}>Самый быстрый</FilterOption2>\n    </PriceFilterWrap>\n  );\n};\n\nPriceFilter.propTypes = {\n  priceFilter: propTypes.string,\n  changePriceFilter: propTypes.func,\n  sortByDuration: propTypes.func,\n  sortByPrice: propTypes.func,\n\n};\n\nPriceFilter.defaultProps = {\n  priceFilter: 'cheapest',\n  changePriceFilter: null,\n  sortByDuration: null,\n  sortByPrice: null,\n};\n\nexport default PriceFilter;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { uniqueId } from 'lodash';\nimport './transfer-filter-checkbox.css';\n\nconst TransferFilterWrap = styled.div`\n  max-width: 190px;\n  max-height: 212px;\n  height: 200px;\n  flex-grow: 1;\n  height: 252px;\n  margin-right: 20px;\n  background-color: white;\n  box-shadow: 0px 2px 8px rgba(0, 0, 0, 0.1);\n  border-radius: 5px;\n  padding: 20px 0px 20px 0px;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Title = styled.span`\n  padding-left: 20px;\n  padding-bottom: 5px;\n`;\n\nconst checkboxActiveStyle = (event) => {\n  event.target.style.background = '#F1FCFF';\n};\n\nconst checkboxNonActiveStyle = (event) => {\n  event.target.style.background = '#FFFFFF';\n};\n\nconst TransferFilter = (props) => {\n  const { changeCheckboxes, checkboxes } = props;\n\n  const handleOnChangeCheckboxes = (event) => {\n    const { checked } = event.target;\n    const transferType = event.target.name;\n    if (transferType === 'all') {\n      changeCheckboxes((current) => ({\n        all: { ...current.all, isChecked: checked },\n        noTransfer: { ...current.noTransfer, isChecked: checked },\n        oneTransfer: { ...current.oneTransfer, isChecked: checked },\n        twoTransfer: { ...current.twoTransfer, isChecked: checked },\n        threeTransfer: { ...current.threeTransfer, isChecked: checked },\n      }));\n      return;\n    }\n    changeCheckboxes((currentCheckboxes) => ({\n      ...currentCheckboxes,\n      [transferType]: { ...currentCheckboxes[transferType], isChecked: checked },\n    }));\n  };\n\n  return (\n    <TransferFilterWrap>\n      <Title>КОЛИЧЕСТВО ПЕРЕСАДОК</Title>\n      {Object.values(checkboxes).map((checkbox) => (\n        <div\n          onMouseEnter={checkboxActiveStyle}\n          onMouseLeave={checkboxNonActiveStyle}\n          key={uniqueId()}\n          className=\"checkbox-wrap\"\n        >\n          <input\n            checked={checkbox.isChecked}\n            type=\"checkbox\"\n            className=\"filter-checkbox\"\n            id={checkbox.checkboxType}\n            name={checkbox.checkboxType}\n            onChange={handleOnChangeCheckboxes}\n          />\n          <label\n            htmlFor={checkbox.checkboxType}\n          >\n            <span />\n            {checkbox.title}\n          </label>\n        </div>\n      ))}\n    </TransferFilterWrap>\n  );\n};\n\nTransferFilter.propTypes = {\n  changeCheckboxes: propTypes.func,\n  checkboxes: propTypes.objectOf(propTypes.object),\n};\n\nTransferFilter.defaultProps = {\n  changeCheckboxes: null,\n  checkboxes: {},\n};\n\n\nexport default TransferFilter;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { sortBy } from 'lodash';\nimport styled from 'styled-components';\nimport Loader from 'react-loader-spinner';\nimport FlightList from './flight-list';\nimport PriceFilter from './price-filter';\nimport TransferFilter from './transfer-filter';\nimport mainLogoSrc from './main-logo.png';\n\nconst ContentWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  max-width: 768px;\n  margin: 0px auto 0px auto;\n  color: #4A4A4A;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  flex-grow: 1;\n  flex-direction: column;\n`;\n\nconst MainLogoWrapper = styled.div`\n  margin: 30px auto 30px auto;\n  text-align: center;\n`;\n\nconst LoaderWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-basis: 100%;\n`;\n\nconst defaultFilterCheckboxes = {\n  all: { isChecked: true, title: 'Все', checkboxType: 'all' },\n  noTransfer: { isChecked: true, title: 'Без пересадок', checkboxType: 'noTransfer' },\n  oneTransfer: { isChecked: true, title: '1 пересадка', checkboxType: 'oneTransfer' },\n  twoTransfer: { isChecked: true, title: '2 пересадки', checkboxType: 'twoTransfer' },\n  threeTransfer: { isChecked: true, title: '3 пересадки', checkboxType: 'threeTransfer' },\n};\n\nconst defaultTicketsList = {\n  noTransfer: [],\n  oneTransfer: [],\n  twoTransfer: [],\n  threeTransfer: [],\n  show: [],\n};\n\nconst fetchServerData = async (url, maxRequestsNumber = 5) => {\n  const searchIdRequest = async () => (\n    axios.get(url)\n  );\n\n  try {\n    return await searchIdRequest();\n  } catch (error) {\n    if (maxRequestsNumber === 0) throw new Error(error, 'AttemptsLimitExceeded');\n    return fetchServerData(url, maxRequestsNumber - 1);\n  }\n};\n\nconst App = () => {\n  const [checkboxes, changeCheckboxes] = useState(defaultFilterCheckboxes);\n  const [priceFilter, changePriceFilter] = useState('cheapest'); // cheapest, fastest\n  const [tickets, setTickets] = useState(defaultTicketsList);\n\n  const [dataLoader, setDataLoader] = useState(true);\n\n\n  const setVisibleTickets = () => {\n    const visibleTickets = (currentTickets) => {\n      let show = [];\n      Object.entries(checkboxes).forEach((el) => {\n        const key = el[0];\n        const { isChecked } = el[1];\n        if (key === 'all') return;\n        if (isChecked === true) show = [...show, ...currentTickets[key]];\n      });\n      return [...show];\n    };\n\n    setTickets((currentTickets) => ({\n      ...currentTickets,\n      show: visibleTickets(currentTickets),\n    }));\n  };\n\n  const sortByPrice = () => {\n    const sortedFunc = (arr) => sortBy(arr, (ticket) => ticket.price);\n    setTickets((currentTickets) => ({\n      ...currentTickets,\n      noTransfer: sortedFunc(currentTickets.noTransfer),\n      oneTransfer: sortedFunc(currentTickets.oneTransfer),\n      twoTransfer: sortedFunc(currentTickets.twoTransfer),\n      threeTransfer: sortedFunc(currentTickets.threeTransfer),\n    }));\n    setVisibleTickets();\n  };\n\n  const sortByDuration = () => {\n    const sortedFunc = (arr) => sortBy(arr, (ticket) => ticket.segments[0].duration);\n    setTickets((currentTickets) => ({\n      ...currentTickets,\n      noTransfer: sortedFunc(currentTickets.noTransfer),\n      oneTransfer: sortedFunc(currentTickets.oneTransfer),\n      twoTransfer: sortedFunc(currentTickets.twoTransfer),\n      threeTransfer: sortedFunc(currentTickets.threeTransfer),\n    }));\n    setVisibleTickets();\n  };\n\n  const getTickets = async () => {\n    const fetchSearchId = await fetchServerData('https://front-test.beta.aviasales.ru/search');\n    const { searchId } = fetchSearchId.data;\n    const fetchData = async () => {\n      const response = await fetchServerData(`https://front-test.beta.aviasales.ru/tickets?searchId=${searchId}`);\n      const newTickets = response.data.tickets;\n      setTickets((currentTickets) => ({\n        ...currentTickets,\n        noTransfer: [\n          ...currentTickets.noTransfer,\n          ...newTickets.filter((ticket) => ticket.segments[0].stops.length === 0),\n        ],\n        oneTransfer: [\n          ...currentTickets.oneTransfer,\n          ...newTickets.filter((ticket) => ticket.segments[0].stops.length === 1),\n        ],\n        twoTransfer: [\n          ...currentTickets.twoTransfer,\n          ...newTickets.filter((ticket) => ticket.segments[0].stops.length === 2),\n        ],\n        threeTransfer: [\n          ...currentTickets.threeTransfer,\n          ...newTickets.filter((ticket) => ticket.segments[0].stops.length === 3),\n        ],\n      }));\n      if (response.data.stop === true) {\n        sortByPrice();\n        setDataLoader(false);\n      }\n      if (response.data.stop === false) {\n        await fetchData();\n      }\n    };\n\n    await fetchData();\n  };\n\n  useEffect(() => {\n    getTickets();\n  }, []);\n\n  useEffect(() => {\n    setVisibleTickets();\n  }, [checkboxes]);\n\n  const renderFlightList = () => {\n    if (dataLoader === true) {\n      return (\n        <LoaderWrapper>\n          <Loader type=\"Bars\" color=\"#2196F3\" height={100} width={100} />\n        </LoaderWrapper>\n      );\n    }\n    return <FlightList tickets={tickets.show} />;\n  };\n  return (\n    <div className=\"main-wrapper\">\n      <MainLogoWrapper className=\"main-logo-wrapper\">\n        <img src={mainLogoSrc} alt=\"Логотип aviasales\" />\n      </MainLogoWrapper>\n\n      <ContentWrapper>\n        <TransferFilter\n          checkboxes={checkboxes}\n          changeCheckboxes={changeCheckboxes}\n          setVisibleTickets={setVisibleTickets}\n        />\n\n        <Content>\n          <PriceFilter\n            priceFilter={priceFilter}\n            changePriceFilter={changePriceFilter}\n            sortByDuration={sortByDuration}\n            sortByPrice={sortByPrice}\n          />\n          {renderFlightList()}\n        </Content>\n      </ContentWrapper>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}